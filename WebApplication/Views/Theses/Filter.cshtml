@using WebApplication.Models

@model Data.Models.DTOs.ThesisModel
@{

}
<div class="container">
    <div class="row">
        <div class="col-md-6">
            <form method="post" enctype="multipart/form-data">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "btn btn-danger" })
                <div class="form-group">
                    <label>Author Name</label>
                    <input type="text" class="form-control" name="AuthorLastName" />
                    @Html.ValidationMessageFor(x => x.AUTHORLASTNAME, "", new { @style = "color:red" })
                </div>
                <br />

                <div class="form-group">
                    <label>Address</label>
                    <input type="text" class="form-control" name="Address" />
                    @Html.ValidationMessageFor(x => x.AUTHORNAME, "", new { @style = "color:red" })
                </div>
                <br />

                <div class="form-group">
                    <label>Supervisor First Name</label>
                    <input type="text" class="form-control" name="Email" />
                    @Html.ValidationMessageFor(x => x.SUPERVISORFIRSTNAME, "", new { @style = "color:red" })
                </div>
                <br />

                <div class="form-group">
                    <label>Supervisor Last Name</label>
                    <input type="text" class="form-control" name="Phone" />
                    @Html.ValidationMessageFor(x => x.SUPERVISORLASTNAME, "", new { @style = "color:red" })
                </div>
                <br />


                <div class="form-group">
                    <label>Title</label>
                    <input type="text" class="form-control" name="Phone" />
                    @Html.ValidationMessageFor(x => x.TITLE, "", new { @style = "color:red" })
                </div>
                <br />

                <div class="form-group">
                    <label>Language</label> 
                    @Html.DropDownListFor(x => x.LANGUAGE,
                             Enum.GetValues(typeof(Languages)).Cast<Languages>().Select(
                             value => new SelectListItem
                    {
                        Text = value.ToString(),
                        Value = ((int)value).ToString(),
                        Selected = value.ToString() == Model.LANGUAGE
                    }), "Select Language", new { @class = "form-control" })

                </div>
                <br />
                <div class="form-group">
                    <label>Types</label>
                    @Html.DropDownListFor(x => x.TYPE,
                             Enum.GetValues(typeof(Types)).Cast<Types>().Select(
                             value => new SelectListItem
                    {
                        Text = value.ToString(),
                        Value = ((int)value).ToString(),
                        Selected = value.ToString() == Model.TYPE
                    }), "Select Type", new { @class = "form-control" })

                </div>
                <br />

                <div class="form-group">
                    <label>University</label>
                    @Html.DropDownListFor(x => x.UNIVERSITYID, (List<SelectListItem>)ViewBag.Universities, "Select University", new { @class = "form-control" })
                </div>
                <br />
                <div class="form-group">
                    <label>Category</label>
                    @Html.DropDownListFor(x => x.INSTITUTEID, (List<SelectListItem>)ViewBag.Institutes, "Select Institute", new { @class = "form-control" })
                </div>
                <br />

                <button class="btn btn-success" type="submit">Filter</button>
            </form>
        </div>
    </div>
</div>